{"version":3,"sources":["components/products/ProductCart.jsx","components/layouts/Order.jsx","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["ProductCart","props","_props$value","value","name","quantity","color","size","id","imgUrl","price","react_default","a","createElement","className","data-aos","src","alt","concat","onClick","removeOrder","index_es","icon","OrderPage","_useContext","useContext","CartContext","products","setProducts","_useState","useState","_useState2","Object","slicedToArray","email","setEmail","_useState3","_useState4","phone","setPhone","_useState5","_useState6","redirect","setRedirect","_useState7","_useState8","orderSent","setOrderSent","newOrder","filter","p","hanldeOrder","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","infoToSend","response","wrap","_context","prev","next","preventDefault","length","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","sent","json","success","store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","pauseOnHover","stop","_x","apply","this","arguments","totalPrice","forEach","Number","parseFloat","toFixed","react_router","to","Fragment","map","product","products_ProductCart","key","onSubmit","required","placeholder","onChange","target","module","exports","__webpack_require__","runtime","undefined","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","d","__webpack_exports__"],"mappings":"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","file":"static/js/6.5a9758b4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ProductCart = props => {\r\n  const { name, quantity, color, size, id, imgUrl, price } = props.value;\r\n  return (\r\n    <div\r\n      className=\"product-cart row align-items-center text-center mx-0 mb-lg-0 mb-4\"\r\n      data-aos=\"fade-up\"\r\n    >\r\n      <div className=\"col-lg-2\">\r\n        <img src={imgUrl} alt=\"cart product\" className=\"mx-auto mb-3\" />\r\n      </div>\r\n      <h4 className=\" px-2 py-1 col-lg-3\">{name}</h4>\r\n      <div className=\"col-lg-3\">\r\n        <h4 className=\" px-2 py-1\">{color}</h4>\r\n        <h4 className=\" px-2 py-1\">{size}</h4>\r\n      </div>\r\n      <h4 className=\" px-2 py-1 col-lg-2\">\r\n        {quantity} sets\r\n        <br /> {`$ ${price}`} / set\r\n      </h4>\r\n      <div className=\"col-lg-2 py-2\">\r\n        <button\r\n          className=\"btn ml-auto d-block-inline btn-danger text-center px-1 py-0\"\r\n          onClick={() => props.removeOrder(id)}\r\n        >\r\n          <FontAwesomeIcon icon=\"times\" size=\"lg\" color=\"white\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCart;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { CartContext } from \"../products/CartContext\";\r\nimport ProductCart from \"../products/ProductCart\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { store } from \"react-notifications-component\";\r\nimport \"../style/cart.scss\";\r\n\r\nconst OrderPage = () => {\r\n  const { products, setProducts } = useContext(CartContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [orderSent, setOrderSent] = useState(false);\r\n\r\n  //   console.log(products);\r\n  const removeOrder = id => {\r\n    const newOrder = products.filter(p => p.id !== id);\r\n    setProducts(newOrder);\r\n  };\r\n\r\n  const hanldeOrder = async e => {\r\n    e.preventDefault();\r\n    if (products.length > 0 && !orderSent) {\r\n      setOrderSent(true);\r\n      const infoToSend = { products, email, phone };\r\n      const response = await fetch(\"/api/order\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(infoToSend)\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        store.addNotification({\r\n          title: \"Success\",\r\n          message: \"Your Order was sent successfully\",\r\n          type: \"success\",\r\n          insert: \"bottom\",\r\n          container: \"bottom-right\",\r\n          animationIn: [\"animated\", \"fadeIn\"],\r\n          animationOut: [\"animated\", \"fadeOut\"],\r\n          dismiss: {\r\n            duration: 5000,\r\n            pauseOnHover: true\r\n          }\r\n        });\r\n        setProducts([]);\r\n        setRedirect(true);\r\n      } else {\r\n        setOrderSent(true);\r\n\r\n        store.addNotification({\r\n          title: \"Not Successful\",\r\n          message: \"Something Wrong happened, please try again\",\r\n          type: \"danger\",\r\n          insert: \"bottom\",\r\n          container: \"bottom-right\",\r\n          animationIn: [\"animated\", \"fadeIn\"],\r\n          animationOut: [\"animated\", \"fadeOut\"],\r\n          dismiss: {\r\n            duration: 5000\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n  let totalPrice = 0;\r\n  products.forEach(p => {\r\n    const price = Number.parseFloat(p.price);\r\n    const quantity = +p.quantity;\r\n    totalPrice += price * quantity;\r\n  });\r\n  totalPrice = totalPrice.toFixed(2);\r\n\r\n  if (redirect) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <main className=\"container mt-5 mb-6\">\r\n      <h2 className=\"text-center  mt-3\" data-aos=\"fade-down\">\r\n        Please review your\r\n        <span className=\"text-primary text-decoration-underline\">\r\n          {\" \"}\r\n          Order{\" \"}\r\n        </span>{\" \"}\r\n        And Make sure to enter\r\n        <span className=\"text-primary\"> Contact Info </span>Correctly and we\r\n        will respond to you very quickly\r\n      </h2>\r\n      {products.length <= 0 ? (\r\n        <h4 className=\"text-center my-5 h2\">No orders yet </h4>\r\n      ) : (\r\n        <React.Fragment>\r\n          <h3\r\n            className=\"mt-6 mb-5 text-primary h1 text-center\"\r\n            data-aos=\"zoom-in\"\r\n          >\r\n            Your Order{\" \"}\r\n          </h3>\r\n          <div className=\"w-100\" data-aos=\"fade-up\">\r\n            <div className=\"row px-2 w-100 mx-0 text-center\">\r\n              <h4 className=\"mb-0 text-secondary col-lg-2 \">Image</h4>\r\n              <h4 className=\"mb-0 text-secondary col-lg-3\">Product Name </h4>\r\n              <h4 className=\"mb-0 text-secondary col-lg-3 \">Color & Size</h4>\r\n              <h4 className=\"mb-0 text-secondary col-lg-2\">Quantity</h4>\r\n              <h4 className=\"mb-0 col-lg-2  text-white\"> </h4>\r\n            </div>\r\n            <div className=\"products-cart mb-5  w-100\">\r\n              {products.map(product => (\r\n                <ProductCart\r\n                  value={product}\r\n                  key={`${product.id}`}\r\n                  removeOrder={removeOrder}\r\n                />\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <h3 className=\"px-2\">\r\n                Your Total Price : <span>{totalPrice} $</span>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n      <h3 className=\" mb-4 mt-5 text-primary text-center h1\" data-aos=\"zoom-in\">\r\n        Your Contact Info{\" \"}\r\n      </h3>\r\n      <form\r\n        className=\"row justify-content-around w-lg-75 mt-3 px-3\"\r\n        onSubmit={hanldeOrder}\r\n      >\r\n        <div className=\"form-group col-md-6\" data-aos=\"fade-right\">\r\n          <label>\r\n            Your Email <span className=\"text-primary\">*</span> :\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            required\r\n            placeholder=\"eg.ahmad1999@gmail.com\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-6\" data-aos=\"fade-left\">\r\n          <label>Phone Number </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"phone\"\r\n            placeholder=\"eg.+963 967635310\"\r\n            value={phone}\r\n            onChange={e => setPhone(e.target.value)}\r\n          />\r\n        </div>\r\n        {/* <div className=\"form-group col-md-12\">\r\n          <label>\r\n            Message <span className=\"text-primary\">*</span> :\r\n          </label>\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"message\"\r\n            required\r\n            rows=\"5\"\r\n            style={{ resize: \"none\" }}\r\n            placeholder=\"eg.Hello there , I would like you to supply us with ***\"\r\n          />\r\n        </div> */}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-lg ml-auto mr-4 mt-4\"\r\n        >\r\n          Send Your Order{\" \"}\r\n        </button>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}